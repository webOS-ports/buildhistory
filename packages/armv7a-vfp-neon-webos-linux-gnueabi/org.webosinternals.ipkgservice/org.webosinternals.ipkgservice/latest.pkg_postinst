    #!/bin/sh -e

    # Make sure we're only executed on the device
    if [ x"$D" = "x" ]; then
        APPS=/media/cryptofs/apps

        # Create the opkg config and database areas
        mkdir -p $APPS//etc/opkg $APPS//usr/lib/opkg/cache

        # Remove all list database cache files
        rm -f $APPS//var/lib/opkg/lists/*

        # Set up the architecture configuration file
        rm -f $APPS//etc/opkg/arch.conf
        cp /etc/opkg/arch.conf $APPS//etc/opkg/arch.conf

        # Install optware feeds
        echo "src/gz optware http://ipkg.preware.org/feeds/optware/all" > $APPS//etc/opkg/optware.conf
        echo "src/gz optware-`/bin/uname -m` http://ipkg.preware.org/feeds/optware/`/bin/uname -m`" >> $APPS//etc/opkg/optware.conf
        sed -i -e 's|armv7l|armv7|g' $APPS//etc/opkg/optware.conf

        # Install webosinternals feeds
        echo "src/gz webosinternals http://ipkg.preware.org/feeds/webos-internals/all" > $APPS//etc/opkg/webos-internals.conf
        echo "src/gz webosinternals-`/bin/uname -m` http://ipkg.preware.org/feeds/webos-internals/`/bin/uname -m`" >> $APPS//etc/opkg/webos-internals.conf
        sed -i -e 's|armv7l|armv7|g' $APPS//etc/opkg/webos-internals.conf

        # Install the alpha testing feeds (disabled by default)
        if [ -f /var/preferences/org.webosinternals.preware/enable-alpha-feeds ] ; then

          # Install alpha optware feeds
          echo "src/gz alpha-optware http://ipkg.preware.org/alpha/optware/all" > $APPS//etc/opkg/alpha-optware.conf.new
          echo "src/gz alpha-optware-`/bin/uname -m` http://ipkg.preware.org/alpha/optware/`/bin/uname -m`" >> $APPS//etc/opkg/alpha-optware.conf.new
          sed -i -e 's|armv7l|armv7|g' $APPS//etc/opkg/alpha-optware.conf.new
          sed -i -e 's|armv6l|armv6|g' $APPS//etc/opkg/alpha-optware.conf.new

          # Install alpha apps feeds
          echo "src/gz alpha-apps http://ipkg.preware.org/alpha/apps/all" > $APPS//etc/opkg/alpha-apps.conf.new
          echo "src/gz alpha-apps-`/bin/uname -m` http://ipkg.preware.org/alpha/apps/`/bin/uname -m`" >> $APPS//etc/opkg/alpha-apps.conf.new
          sed -i -e 's|armv7l|armv7|g' $APPS//etc/opkg/alpha-apps.conf.new
          sed -i -e 's|armv6l|armv6|g' $APPS//etc/opkg/alpha-apps.conf.new

          # Remove the obsolete testing feeds
          rm -f $APPS//etc/opkg/webos-testing*.conf*
          rm -f $APPS//etc/opkg/optware-testing*.conf*
          rm -f $APPS//etc/opkg/webos-*-testing*.conf*
        fi

        # Install the beta testing feeds (disabled by default)
        if [ -f /var/preferences/org.webosinternals.preware/enable-beta-feeds ] ; then

          # Install beta optware feeds
          echo "src/gz beta-optware http://ipkg.preware.org/beta/optware/all" > $APPS//etc/opkg/beta-optware.conf.new
          echo "src/gz beta-optware-`/bin/uname -m` http://ipkg.preware.org/beta/optware/`/bin/uname -m`" >> $APPS//etc/opkg/beta-optware.conf.new
          sed -i -e 's|armv7l|armv7|g' $APPS//etc/opkg/beta-optware.conf.new
          sed -i -e 's|armv6l|armv6|g' $APPS//etc/opkg/beta-optware.conf.new

          # Install beta apps feeds
          echo "src/gz beta-apps http://ipkg.preware.org/beta/apps/all" > $APPS//etc/opkg/beta-apps.conf.new
          echo "src/gz beta-apps-`/bin/uname -m` http://ipkg.preware.org/beta/apps/`/bin/uname -m`" >> $APPS//etc/opkg/beta-apps.conf.new
          sed -i -e 's|armv7l|armv7|g' $APPS//etc/opkg/beta-apps.conf.new
          sed -i -e 's|armv6l|armv6|g' $APPS//etc/opkg/beta-apps.conf.new

          # Remove the old testing feeds
          rm -f $APPS//etc/opkg/webos-testing*.conf*
          rm -f $APPS//etc/opkg/optware-testing*.conf*
          rm -f $APPS//etc/opkg/webos-*-testing*.conf*
        fi

        # Retain disabled status of existing feeds
        if [ "`ls $APPS//etc/opkg/*.disabled`" ] ; then
          for f in $APPS//etc/opkg/*.disabled ; do
            if [ -f $APPS//etc/opkg/`basename $f .disabled` ] ; then
              rm -f $f
              mv $APPS//etc/opkg/`basename $f .disabled` $f
            fi
          done
        fi

        # Assert disabled status of new feeds
        if [ "`ls $APPS//etc/opkg/*.new`" ] ; then
          for f in $APPS//etc/opkg/*.new ; do
            if [ -f $APPS//etc/opkg/`basename $f .new` ] ; then
              rm -f $APPS//etc/opkg/`basename $f .new`
              mv $f $APPS//etc/opkg/`basename $f .new`
            else
              rm -f $APPS//etc/opkg/`basename $f .new`.disabled
              mv $f $APPS//etc/opkg/`basename $f .new`.disabled
            fi
          done
        fi
    else
        exit 1
    fi
